server.port=9095
spring.application.name=STUDENT-SERVICE
server.servlet.context-path=/student-app/api

# Eureka client configuration
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# Database configuration
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/cis_micro_student
spring.datasource.username=root
spring.datasource.password=admin

# Hibernate configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true





#eureka.instance.instance-id=${spring.application.name}:${server.port}

#base url for RestTemplate of Address Service
#addressservice.base.url=http://localhost:9092/address-app/api


#For Eureka server connect if change default code from 8761 instead of 5000
#eureka.client.service-url.defaultZone=http://localhost:5000/eureka/
#if multiple zone are there 
#eureka.client.service-url.z1=http://localhost:5000/eureka/

#eureka.instance.lease-renewal-interval-in-seconds=30
#eureka.instance.lease-expiration-duration-in-seconds=90


info.app.name = Student App
info.app.description = Ramesh C Rai 
info.app.version = 1.0.0;

# Actuator configuration
management.endpoints.web.exposure.include=*
management.info.env.enabled=true

#Circuit breaker
management.health.circuitbreakers.enabled=true
management.endpoint.health.show-details=always

# Enable health indicator for the circuit breaker
resilience4j.circuitbreaker.instances.courseAddressBreaker.register-health-indicator=true

# Sliding window size (number of calls evaluated for circuit breaking)
resilience4j.circuitbreaker.instances.courseAddressBreaker.sliding-window-size=10

# Buffer size for event consumer, to hold circuit breaker events
resilience4j.circuitbreaker.instances.courseAddressBreaker.event-consumer-buffer-size=10

# Minimum number of calls required before the circuit breaker evaluates health
resilience4j.circuitbreaker.instances.courseAddressBreaker.minimum-number-of-calls=5

# Number of permitted calls when the circuit breaker is in the half-open state
resilience4j.circuitbreaker.instances.courseAddressBreaker.permitted-number-of-calls-in-half-open-state=3

# Time the circuit breaker stays open before transitioning to half-open state
resilience4j.circuitbreaker.instances.courseAddressBreaker.wait-duration-in-open-state=1s

# Percentage of failed calls that will trigger the circuit breaker to open
resilience4j.circuitbreaker.instances.courseAddressBreaker.failure-rate-threshold=50

# Percentage of slow calls that will trigger the circuit breaker to open
resilience4j.circuitbreaker.instances.courseAddressBreaker.slow-call-rate-threshold=50

# Threshold duration for considering a call to be slow
resilience4j.circuitbreaker.instances.courseAddressBreaker.slow-call-duration-threshold=2







